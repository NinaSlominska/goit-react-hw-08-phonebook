{"version":3,"file":"static/js/681.96d1c076.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.Styled.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.Styled.js","components/Filter/Filter.js","components/ContactList/ContactList.Styled.js","components/Contact/Contact.Styled.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  background-color: #ffebcd;\n  border-radius: 10px;\n  padding: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 10px;\n  border: none;\n  :hover,\n  :focus {\n    outline: 2px solid #ffdead;\n  }\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  padding: 8px;\n  border-radius: 10px;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  line-height: 1.2;\n  background-color: #f4a460;\n  cursor: pointer;\n  :focus,\n  :hover {\n    background-color: #d2691e;\n    transform: scale(1.1);\n  }\n`;\n","export const getContacts = state => state.contacts.contacts;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state).toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n};\n","import { useState } from 'react';\nimport { Form, Input, Button } from './ContactForm.Styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n// import { addContact } from 'redux/contactsSlice';\nimport { addContact } from 'redux/operation';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { getContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const onSubmit = event => {\n    event.preventDefault();\n    const ok = contacts.find(\n      element => element.name.toLowerCase() === name.toLowerCase()\n    );\n    if (ok) {\n      alert(`${name} is already in contact`);\n      return false;\n    }\n    const id = nanoid();\n    const newContact = { id, name, number };\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n  const onChange = event => {\n    const { value, name } = event.target;\n    switch (name) {\n      case 'name': {\n        setName(value);\n        break;\n      }\n      case 'number': {\n        setNumber(value);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        onChange={onChange}\n        placeholder=\"Name\"\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Input\n        onChange={onChange}\n        placeholder=\"Number\"\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button>Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const Input = styled.input`\n  max-width: 285px;\n  margin-bottom: 8px;\n  width: 100%;\n  margin-top: 8px;\n  padding: 8px;\n  border-radius: 8px;\n  border: none;\n  :hover,\n  :focus {\n    outline: 2px solid #D2691E;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Input } from './Filter.Styled';\n\nimport { changeValue } from 'redux/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(changeValue(event.target.value));\n  };\n  return (\n    <Input\n      onChange={onChange}\n      placeholder=\"Find contacts by name\"\n      type=\"text\"\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      required\n    />\n  );\n}\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n`;\n\n","import styled from 'styled-components';\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 8px;\n  border: 1px solid #FFDEAD;\n  border-radius: 10px;\n  align-items: center;\n  justify-content: center;\n  padding: 3px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 3px;\n  display: flex;\n  margin-left: auto;\n  border: none;\n  border-radius: 10px;\n  color: #ffffff;\n  line-height: 1.2;\n  background-color: #F4A460;\n  cursor: pointer;\n  :focus,\n  :hover {\n    background-color: #A52A2A;\n    transform: scale(1.1);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { Button, ListItem } from './Contact.Styled';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/operation';\nexport function Contact({ name, number, id }) {\n  const dispatch = useDispatch();\n  const onDelete = () => {\n    dispatch(deleteContact({ id }));\n  };\n  // Дужки 9\n  return (\n    <ListItem id={id}>\n      <p>\n        {name}: {number}\n      </p>\n      <Button type=\"button\" onClick={onDelete}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n}\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.Styled';\n\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/selectors';\n// const onFilter = (find, contacts) => {\n//   if (find) {\n//     return contacts.filter(element =>\n//       element.name.toLowerCase().includes(find.toLowerCase())\n//     );\n//   }\n//   return contacts;\n// };\nexport function ContactList() {\n  // const contacts = useSelector(state => state.contacts.contacts);\n  // const filter = useSelector(state => state.filter.filter);\n  const filterContacts = useSelector(getFilteredContacts);\n  return (\n    <List>\n      {filterContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}\n","import { ColorRing } from 'react-loader-spinner';\nfunction Loader() {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#008080', '#269393', '#40a0a0', '#80c0c0', '#b3d9d9']}\n    />\n  );\n}\nexport default Loader;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Section, LayoutStyled } from 'components/Layout/Layout.Styled';\n// import { Section } from 'components/Layout/Layout.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operation';\n// import { LayoutStyled } from 'components/Layout/Layout.styled';\nimport { getIsLoading, getError } from 'redux/selectors';\nimport Loader from 'components/Loader/Loader';\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <LayoutStyled>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </LayoutStyled>\n  );\n}\nexport default Contacts;\n"],"names":["Form","styled","Input","Button","getContacts","state","contacts","getIsLoading","isLoading","getError","error","getFilteredContacts","filter","getFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onChange","event","target","value","onSubmit","preventDefault","find","element","alert","newContact","id","nanoid","addContact","placeholder","type","pattern","title","required","Filter","changeValue","List","ListItem","Contact","onClick","deleteContact","ContactList","filterContacts","map","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useEffect","fetchContacts"],"sourceRoot":""}